#!/usr/bin/env python3
"""
Utility for retrieving AWS Auto Scaling Group information.
"""

import json
import subprocess
import sys


def check_aws_cli():
    """Check if AWS CLI is installed and configured."""
    try:
        subprocess.run(["aws", "--version"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    except FileNotFoundError:
        print("Error: AWS CLI is not installed. Please install it first.")
        sys.exit(1)


def get_asgs(name_filter=None):
    """Get Auto Scaling Groups matching the filter."""
    cmd = ["aws", "autoscaling", "describe-auto-scaling-groups"]
    if name_filter:
        cmd.extend(["--filters", f"Name=auto-scaling-group-name,Values={name_filter}*"])
    
    try:
        result = subprocess.run(cmd, capture_output=True, text=True)
        if result.returncode != 0:
            print(f"Error: {result.stderr}")
            sys.exit(1)
        
        data = json.loads(result.stdout)
        return data.get("AutoScalingGroups", [])
    except subprocess.CalledProcessError as e:
        print(f"Error executing AWS CLI: {e}")
        sys.exit(1)
    except json.JSONDecodeError as e:
        print(f"Error parsing AWS response: {e}")
        sys.exit(1)


def print_asg_info(asg):
    """Print formatted ASG information."""
    name = asg["AutoScalingGroupName"]
    desired = asg["DesiredCapacity"]
    min_size = asg["MinSize"]
    max_size = asg["MaxSize"]
    instances = len(asg["Instances"])
    
    print(f"\nASG: {name}")
    print(f"Capacity: {desired} desired, {min_size} min, {max_size} max")
    print(f"Current instances: {instances}")
    
    if instances > 0:
        print("\nInstances:")
        for instance in asg["Instances"]:
            instance_id = instance["InstanceId"]
            health = instance["HealthStatus"]
            az = instance["AvailabilityZone"]
            print(f"- {instance_id} ({health}) in {az}")


def main():
    """Main function."""
    check_aws_cli()
    
    try:
        name_filter = input("Enter ASG name filter (press Enter for all): ").strip()
        
        print("\nFetching ASG information...")
        asgs = get_asgs(name_filter)
        
        if not asgs:
            print("No Auto Scaling Groups found.")
            sys.exit(0)
        
        for asg in asgs:
            print_asg_info(asg)
            
    except KeyboardInterrupt:
        print("\nOperation cancelled by user.")
        sys.exit(0)


if __name__ == "__main__":
    main() 